services:
  service-discovery:
    image: wdd1016/service-discovery:1.1
    container_name: service-discovery
    ports:
      - "8761:8761"
    networks:
      my-network:

  config-service:
    image: wdd1016/config-service:1.1
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      my-network:
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 5s
      timeout: 5s
      retries: 3

  apigateway-service:
    image: wdd1016/apigateway-service:1.1
    container_name: apigateway-service
    ports:
      - "8000:8000"
    environment:
      SPRING_CLOUD_CONFIG_URI: "http://config-service:8888"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://service-discovery:8761/eureka"
    networks:
      my-network:
    depends_on:
      config-service:
        condition: service_healthy

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      my-network:

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      my-network:

  mariadb-server:
    image: mariadb:latest
    container_name: mariadb-server
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: test1357
      MARIADB_DATABASE: mydb
    networks:
      my-network:

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      STORAGE_TYPE: mysql
      MYSQL_DB: zipkin
      MYSQL_USER: zipkin
      MYSQL_PASS: zipkin
      MYSQL_HOST: mysql
    networks:
      my-network:
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:5.7
    container_name: mysql
    platform: linux/amd64
    volumes:
      - ./zipkin/initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: zipkin
      MYSQL_USER: zipkin
      MYSQL_PASSWORD: zipkin
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    networks:
      my-network:
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u$${MYSQL_USER} -p$${MYSQL_PASSWORD} || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  my-network:
    external: true
    name: ecommerce-network